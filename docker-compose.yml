services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tagger_db}
      POSTGRES_USER: ${POSTGRES_USER:-tagger_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tagger_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tagger_user -d tagger_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./backend/uploads:/opt/shared/uploads
      - mapserver_configs:/opt/shared/mapserver
    environment:
      DB_NAME: ${POSTGRES_DB:-tagger_db}
      DB_USER: ${POSTGRES_USER:-tagger_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-tagger_password}
      MAPSERVER_URL: ${MAPSERVER_URL:-http://mapserver}
      MAPSERVER_SHARED_DIR: ${MAPSERVER_SHARED_DIR:-/opt/shared/mapserver}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-secret-key-change-this-in-production}
      JWT_EXPIRE_MINUTES: ${JWT_EXPIRE_MINUTES:-30}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:8080,http://127.0.0.1:8080,http://localhost:5173}
      UVICORN_WORKERS: ${UVICORN_WORKERS:-1}
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery-worker:
    build: ./backend
    command: celery -A celery_app worker --loglevel=info --queues=geo_processing,default
    volumes:
      - ./backend:/app
      - ./backend/uploads:/opt/shared/uploads
      - mapserver_configs:/opt/shared/mapserver
    environment:
      DB_NAME: ${POSTGRES_DB:-tagger_db}
      DB_USER: ${POSTGRES_USER:-tagger_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-tagger_password}
      MAPSERVER_URL: ${MAPSERVER_URL:-http://mapserver}
      MAPSERVER_SHARED_DIR: ${MAPSERVER_SHARED_DIR:-/opt/shared/mapserver}
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      PYTHONPATH: /app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  flower:
    build: ./backend
    command: celery -A celery_app flower --port=5555 --url-prefix=/flower
    ports:
      - "5555:5555"
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    depends_on:
      redis:
        condition: service_healthy

  mapserver:
    build: 
      context: ./mapserver
      dockerfile: Dockerfile.mapserver
    container_name: tagger_mapserver
    volumes:
      - ./backend/uploads:/opt/mapserver/uploads
      - mapserver_configs:/opt/shared/mapserver
      - ./mapserver/mapserver.conf:/usr/local/etc/mapserver.conf
    depends_on:
      - backend


volumes:
  postgres_data:
  redis_data:
  mapserver_configs:
